<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <!-- enable use-expressions -->
    <!--<http auto-config="false" use-expressions="true"-->
          <!--entry-point-ref="loginUrlAuthenticationEntryPoint">-->
        <!--<custom-filter position="FORM_LOGIN_FILTER" ref="customUsernamePasswordAuthenticationFilter"/>-->
        <!--<intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')" />-->
        <!--<intercept-url pattern="/list-user" access="hasRole('ROLE_ADMIN')" />-->
    <http auto-config="true" use-expressions="true">
        <intercept-url pattern="/list-user" access="hasRole('ROLE_ADMIN')" />

        <!-- access denied page -->
        <access-denied-handler error-page="/403" />

        <form-login
                login-page="/login"
                authentication-failure-url="/login?error"
                default-target-url="/edit-profile"
                username-parameter="username"
                password-parameter="password" />
        <logout logout-url="/logout" logout-success-url="/login?logout" />
        <!-- enable csrf protection -->
        <!--<csrf/>-->
    </http>

    <beans:bean id="customUserDetailsService"
                class="vn.smartdev.javatrainingpractice.springmvcpractice.service.impl.CustomUserDetailsService">
        <beans:property name="usersByUsernameQuery" value="select * from user where username = ?"/>
        <beans:property name="authoritiesByUsernameQuery" value="select us.username, r.role_name from user us, user_role ur, role r
        where us.id = ur.user_id and ur.role_id = r.id and us.username=?" />
        <beans:property name="dataSource" ref="dataSource" />
    </beans:bean>

    <beans:bean id="encoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"/>

    <beans:bean id="authenticationProvider"
                class="vn.smartdev.javatrainingpractice.springmvcpractice.handler.LimitLoginAuthenticationProvider">
        <beans:property name="userDetailsService" ref="customUserDetailsService" />
        <!--<beans:property name="userDetailsDao" ref="userDetailsDao" />-->
        <beans:property name="passwordEncoder" ref="encoder"/>
    </beans:bean>

    <!--<beans:bean id="customAuthenticationFailureHandler"-->
          <!--class="vn.smartdev.javatrainingpractice.springmvcpractice.controller.CustomAuthenticationFailureHandler">-->
        <!--<beans:property name="defaultFailureUrl" value="/login?error"/>-->
    <!--</beans:bean>-->

    <!--<beans:bean id="customUsernamePasswordAuthenticationFilter"-->
                <!--class="vn.smartdev.javatrainingpractice.springmvcpractice.controller.CustomUsernamePasswordAuthenticationFilter">-->
        <!--<beans:property name="authenticationManager" ref="authenticationManager"/>-->
        <!--<beans:property name="filterProcessesUrl" value="/login" />-->
        <!--<beans:property name="postOnly" value="false" />-->
    <!--</beans:bean>-->

    <!--<beans:bean id="loginUrlAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">-->
        <!--<beans:property name="loginFormUrl" value="/login"/>-->
    <!--</beans:bean>-->

    <!--<authentication-manager>-->
        <!--<authentication-provider>-->
            <!--<password-encoder hash="md5"/>-->
            <!--<jdbc-user-service data-source-ref="dataSource"-->
                               <!--users-by-username-query=-->
                                       <!--"select username,password,enabled from user where username=?"-->
                               <!--authorities-by-username-query=-->
                                       <!--"select us.username, r.role_name from user us, user_role ur, role r-->
                                        <!--where us.id = ur.user_id and ur.role_id = r.id and us.username=?  " />-->
        <!--</authentication-provider>-->
    <!--</authentication-manager>-->
    <authentication-manager>
        <authentication-provider ref="authenticationProvider">
        </authentication-provider>
    </authentication-manager>
</beans:beans>